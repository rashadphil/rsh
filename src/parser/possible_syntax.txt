ls some_dir/

# get files in some directory -> sort by size -> display as table
ls some_dir/ | sort f -> f.size | table
            
            ParsedComm
          /           \
      sort            Expr(Lambda)
                      /         \
                  String(f)      

# get files in current directory -> filter where size >= 50 MB -> display as table
ls | filter f -> f.size >= 50 | table

# get all processes -> sort by memory used -> take first 10
ps | sort p -> p.memory | take 10

# make files with names {0-100}.cc
seq 100 | map n -> touch "n.cc"


# Types?
ls         :: Array  
ps         :: Array  

filter     :: Array -> Array              
map        :: Array -> Fn -> Array


ls | filter f -> f.size >= 50 | table

# process
Query : 
  ls some_dir/ | sortby size | table
Lexed : 
  <item : "ls">, <item : "some_dir/">, <pipe>, <item : "sort">, <item : "f">, <arrow> <item : "table">
Parsed? (Stage 1) :
  Command #1:
    <item : "ls">, <item : "some_dir/">, 
  Command #2:
    <item : "sort">, <item : "f">, <arrow> <item: "f.size"> 
  Command #3:
    <item : "table">

AST :
  (BLOCK
    (CMD (name (String ls)) (args (String some_dir/)))
    (PIPE)
    (CMD (name sortby) (args (String size)))
  )
